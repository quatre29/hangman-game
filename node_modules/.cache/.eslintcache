[{"/home/quatre/Desktop/Projects/hangman/src/index.js":"1","/home/quatre/Desktop/Projects/hangman/src/App.js":"2","/home/quatre/Desktop/Projects/hangman/src/utils/reqOptions.js":"3","/home/quatre/Desktop/Projects/hangman/src/components/GuessedLetters.jsx":"4","/home/quatre/Desktop/Projects/hangman/src/components/Message.jsx":"5","/home/quatre/Desktop/Projects/hangman/src/components/Progression.jsx":"6","/home/quatre/Desktop/Projects/hangman/src/components/Hangman.jsx":"7","/home/quatre/Desktop/Projects/hangman/src/components/Button.jsx":"8","/home/quatre/Desktop/Projects/hangman/src/components/Word.jsx":"9","/home/quatre/Desktop/Projects/hangman/src/components/UserInput.jsx":"10","/home/quatre/Desktop/Projects/hangman/src/components/Score.jsx":"11","/home/quatre/Desktop/Projects/hangman/src/components/Perks.jsx":"12","/home/quatre/Desktop/Projects/hangman/src/components/Letter.jsx":"13"},{"size":440,"mtime":1640091914536,"results":"14","hashOfConfig":"15"},{"size":5693,"mtime":1641504697176,"results":"16","hashOfConfig":"15"},{"size":1406,"mtime":1641504633781,"results":"17","hashOfConfig":"15"},{"size":393,"mtime":1640091914536,"results":"18","hashOfConfig":"15"},{"size":514,"mtime":1640091914536,"results":"19","hashOfConfig":"15"},{"size":3569,"mtime":1640091914536,"results":"20","hashOfConfig":"15"},{"size":2512,"mtime":1640091914536,"results":"21","hashOfConfig":"15"},{"size":242,"mtime":1640091914536,"results":"22","hashOfConfig":"15"},{"size":833,"mtime":1640341259948,"results":"23","hashOfConfig":"15"},{"size":1497,"mtime":1640091914536,"results":"24","hashOfConfig":"15"},{"size":199,"mtime":1640091914536,"results":"25","hashOfConfig":"15"},{"size":3832,"mtime":1640340996672,"results":"26","hashOfConfig":"15"},{"size":240,"mtime":1640091914536,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1l34lkt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/quatre/Desktop/Projects/hangman/src/index.js",[],["59","60"],"/home/quatre/Desktop/Projects/hangman/src/App.js",["61","62","63"],"/home/quatre/Desktop/Projects/hangman/src/utils/reqOptions.js",[],"/home/quatre/Desktop/Projects/hangman/src/components/GuessedLetters.jsx",[],"/home/quatre/Desktop/Projects/hangman/src/components/Message.jsx",[],"/home/quatre/Desktop/Projects/hangman/src/components/Progression.jsx",[],"/home/quatre/Desktop/Projects/hangman/src/components/Hangman.jsx",["64","65","66"],"import React from \"react\";\nimport Sketch from \"react-p5\";\nimport \"../styles/Hangman.css\";\n\nlet x = 50;\nlet y = 50;\nlet baseLine = 120;\nlet vertLine = 490;\nlet upLine = 200;\nlet noLine = 100;\nlet headSize = 0;\nlet bodyLine = 195;\nlet arm1X = 320;\nlet arm2X = 320;\nlet arm1Y = 200;\nlet arm2Y = 200;\nlet leg1X = 320;\nlet leg2X = 320;\nlet leg1Y = 300;\nlet leg2Y = 300;\n\nexport default ({ hangmanCount }) => {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 500).parent(canvasParentRef);\n  };\n\n  const draw = (p5) => {\n    p5.stroke(\"#355070\");\n\n    p5.strokeWeight(10);\n\n    let baselineStop = 380;\n    let baseY = 490;\n    p5.frameRate(200);\n\n    if (hangmanCount <= 10) {\n      p5.background(\"#B56576\");\n    }\n    if (hangmanCount <= 9) {\n      p5.line(120, baseY, baseLine, baseY);\n      if (baseLine < baselineStop) {\n        baseLine += 15;\n      }\n    }\n    if (hangmanCount <= 8) {\n      //vertical line\n      p5.line(200, 490, 200, vertLine);\n      if (vertLine > 100) {\n        vertLine -= 15;\n      }\n    }\n    if (hangmanCount <= 7) {\n      //upper cross\n      p5.line(200, 100, upLine, 100);\n      if (upLine < 320) {\n        upLine += 15;\n      }\n    }\n    if (hangmanCount <= 6) {\n      //noose\n      p5.line(320, 100, 320, noLine);\n      if (noLine < 140) {\n        noLine += 15;\n      }\n    }\n    if (hangmanCount <= 5) {\n      //head\n      p5.fill(\"#B56576\");\n      p5.ellipse(320, 170, headSize, headSize);\n      if (headSize < 50) {\n        headSize += 15;\n      }\n    }\n    if (hangmanCount <= 4) {\n      //body\n      p5.line(320, 195, 320, bodyLine);\n      if (bodyLine < 300) {\n        bodyLine += 15;\n      }\n    }\n    if (hangmanCount <= 3) {\n      //arm1\n      p5.line(320, 200, arm1X, arm1Y);\n      if (arm1X > 270) {\n        arm1X -= 15;\n        arm1Y += 15;\n      }\n    }\n    if (hangmanCount <= 2) {\n      //arm2\n      p5.line(320, 200, arm2X, arm2Y);\n      if (arm2X < 370) {\n        arm2X += 15;\n        arm2Y += 15;\n      }\n    }\n    if (hangmanCount <= 1) {\n      //leg1\n      p5.line(320, 300, leg1X, leg1Y);\n      if (leg1X > 270) {\n        leg1X -= 15;\n        leg1Y += 15;\n      }\n    }\n    if (hangmanCount <= 0) {\n      //leg2\n      p5.line(320, 300, leg2X, leg2Y);\n      if (leg2X < 370) {\n        leg2X += 15;\n        leg2Y += 15;\n      }\n    }\n  };\n\n  return (\n    <div className=\"hangman-container\">\n      <p>\n        {hangmanCount} {hangmanCount === 1 ? \"try\" : \"tries\"} left...\n      </p>\n      <Sketch setup={setup} draw={draw} />\n    </div>\n  );\n};\n","/home/quatre/Desktop/Projects/hangman/src/components/Button.jsx",[],"/home/quatre/Desktop/Projects/hangman/src/components/Word.jsx",["67"],"import React, { useEffect } from \"react\";\nimport Letter from \"./Letter\";\nimport \"../styles/Word.css\";\n\nconst Word = ({\n  currentWord,\n  setCurrentWord,\n  words,\n  currentLetter,\n  loading,\n}) => {\n  useEffect(() => {\n    const wordArray = words[0].split(\"\");\n\n    const wordObject = {\n      word: words[0],\n      letters: {},\n      definition: null,\n    };\n\n    wordArray.forEach((letter) => {\n      wordObject.letters[letter] = false;\n    });\n\n    setCurrentWord(wordObject);\n  }, [words]);\n\n  return (\n    <div className=\"word\">\n      {currentWord &&\n        currentWord.word.split(\"\").map((letter, i) => {\n          return (\n            <Letter\n              key={i}\n              letter={letter}\n              guessed={currentWord.letters[letter]}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Word;\n","/home/quatre/Desktop/Projects/hangman/src/components/UserInput.jsx",[],"/home/quatre/Desktop/Projects/hangman/src/components/Score.jsx",["68"],"import React, { useState } from \"react\";\nimport \"../styles/Score.css\";\n\nconst Score = ({ totalScore }) => {\n  return <div className=\"score\">Total Score: {totalScore}</div>;\n};\n\nexport default Score;\n","/home/quatre/Desktop/Projects/hangman/src/components/Perks.jsx",["69"],"import React, { useState } from \"react\";\nimport \"../styles/Perks.css\";\nimport { getWordDefinition } from \"../utils/reqOptions\";\n\nconst Perks = ({\n  perks,\n  setPerks,\n  setCurrentWord,\n  currentWord,\n  setTotalScore,\n  setHangmanCount,\n  currentlyGuessing,\n}) => {\n  const hintPerk = async () => {\n    if (currentlyGuessing) {\n      if (!perks.hintPerk) {\n        const def = await getWordDefinition(currentWord.word);\n        setCurrentWord((prevCurrentWord) => {\n          return { ...prevCurrentWord, definition: def };\n        });\n        setHangmanCount((prevCount) => prevCount - 3);\n        setPerks((prevPerks) => {\n          return { ...prevPerks, hintPerk: true };\n        });\n      }\n    }\n  };\n  const firstAndLastLetterPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.firstAndLastLetter) {\n        setCurrentWord((prevCurrentWord) => {\n          const newWordState = { ...prevCurrentWord };\n\n          const letters = Object.keys(newWordState.letters);\n\n          const wordArr = newWordState.word.split(\"\");\n\n          newWordState.letters[letters[0]] = true;\n          newWordState.letters[wordArr[wordArr.length - 1]] = true;\n\n          return newWordState;\n        });\n        setHangmanCount((prevCount) => prevCount - 5);\n\n        setPerks((prevPerks) => {\n          return { ...prevPerks, firstAndLastLetter: true };\n        });\n      }\n    }\n  };\n  const skipWordPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.skipWord) {\n        console.log(\"skipWord perk\");\n        setCurrentWord((prevCurrentWord) => {\n          const newWordState = { ...prevCurrentWord };\n\n          Object.keys(newWordState.letters).forEach(\n            (letter) => (newWordState.letters[letter] = true)\n          );\n\n          return newWordState;\n        });\n        setTotalScore((prevScore) => {\n          return prevScore - 10;\n        });\n\n        setPerks((prevPerks) => {\n          return { ...prevPerks, skipWord: true };\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"perks-container\">\n      <div className={`${!perks.hintPerk && \"tooltip\"}`}>\n        <i\n          onClick={hintPerk}\n          className={`fas fa-lightbulb ${perks.hintPerk && \"used\"}`}\n        >\n          <span\n            className={`${!perks.hintPerk ? \"tooltiptext\" : \"tooltipdisabled\"}`}\n          >\n            <p>Use this perk to get a hint about the word.</p>\n            <p>\n              <strong>This perk will cost you 3 points</strong>\n            </p>\n            <p>\n              <i>You have 10 seconds to read the hint after will disappear</i>\n            </p>\n          </span>\n        </i>\n      </div>\n      <div className={`${!perks.skipWord && \"tooltip\"}`}>\n        <i\n          onClick={skipWordPerk}\n          className={`fas fa-forward ${perks.skipWord && \"used\"}`}\n        >\n          <span\n            className={`${!perks.skipWord ? \"tooltiptext\" : \"tooltipdisabled\"}`}\n          >\n            <p>Use this perk to reveal the entire word </p>\n            <p>\n              <strong>This perk can be used only once per game!</strong>\n            </p>\n            <p>\n              <strong>This perk will cost you 10 points</strong>\n            </p>\n          </span>\n        </i>\n      </div>\n\n      <div className={`${!perks.firstAndLastLetter && \"tooltip\"}`}>\n        <i\n          onClick={firstAndLastLetterPerk}\n          className={`fas fa-text-width ${perks.firstAndLastLetter && \"used\"}`}\n        >\n          <span\n            className={`${\n              !perks.firstAndLastLetter ? \"tooltiptext\" : \"tooltipdisabled\"\n            }`}\n          >\n            <p>Reveal first and last letter</p>\n            <p>\n              <strong>To use this perk, it will cost you 5 points</strong>\n            </p>\n          </span>\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default Perks;\n","/home/quatre/Desktop/Projects/hangman/src/components/Letter.jsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":27,"column":10,"nodeType":"76","messageId":"77","endLine":27,"endColumn":17},{"ruleId":"74","severity":1,"message":"78","line":27,"column":19,"nodeType":"76","messageId":"77","endLine":27,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":81,"column":6,"nodeType":"81","endLine":81,"endColumn":21,"suggestions":"82"},{"ruleId":"74","severity":1,"message":"83","line":5,"column":5,"nodeType":"76","messageId":"77","endLine":5,"endColumn":6},{"ruleId":"74","severity":1,"message":"84","line":6,"column":5,"nodeType":"76","messageId":"77","endLine":6,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":22,"column":1,"nodeType":"87","endLine":123,"endColumn":3},{"ruleId":"79","severity":1,"message":"88","line":26,"column":6,"nodeType":"81","endLine":26,"endColumn":13,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"90","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'gameWon' is assigned a value but never used.","Identifier","unusedVar","'setGameWon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentWord' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'x' is assigned a value but never used.","'y' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'setCurrentWord'. Either include it or remove the dependency array. If 'setCurrentWord' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [currentLetter, currentWord, loading]",{"range":"99","text":"100"},"Update the dependencies array to be: [setCurrentWord, words]",{"range":"101","text":"102"},[2392,2407],"[currentLetter, currentWord, loading]",[482,489],"[setCurrentWord, words]"]