{"ast":null,"code":"const axios = require(\"axios\").default; // export const getRandomWords = async () => {\n//   try {\n//     const words = await axios.get(\"http://localhost:9090/random-words\");\n//     return words.data.words;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n// export const getWordDefinition = async (word) => {\n//   try {\n//     const wordDef = await axios.get(\n//       \"http://localhost:9090/word-definition\",\n//       {\n//         word,\n//       }\n//     );\n//     return wordDef.data.definition;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n\nexport const getRandomWords = async () => {\n  try {\n    const words = await axios.get(`https://api.wordnik.com/v4/words.json/randomWords?hasDictionaryDef=true&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&limit=11&api_key=${process.env.REACT_APP_API_KEY}`);\n    return words.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWordDefinition = async word => {\n  try {\n    const wordDef = await axios.get(`https://api.wordnik.com/v4/word.json/${word}/definitions?limit=200&includeRelated=false&useCanonical=false&includeTags=false&api_key=${process.env.REACT_APP_API_KEY}`);\n    console.log(wordDef, \"=====================\", process.env.REACT_APP_TEST);\n    return wordDef.data[0].text;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/quatre/Desktop/Projects/hangman/src/utils/reqOptions.js"],"names":["axios","require","default","getRandomWords","words","get","process","env","REACT_APP_API_KEY","data","error","console","log","getWordDefinition","word","wordDef","REACT_APP_TEST","text"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACjB,kLAAiLC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAD9L,CAApB;AAGA,WAAOJ,KAAK,CAACK,IAAb;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CATM;AAWP,OAAO,MAAMG,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;AAC/C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMf,KAAK,CAACK,GAAN,CACnB,wCAAuCS,IAAK,4FAA2FR,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EADlJ,CAAtB;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ,EAAqB,uBAArB,EAA8CT,OAAO,CAACC,GAAR,CAAYS,cAA1D;AAEA,WAAOD,OAAO,CAACN,IAAR,CAAa,CAAb,EAAgBQ,IAAvB;AACD,GARD,CAQE,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAZM","sourcesContent":["const axios = require(\"axios\").default;\n\n// export const getRandomWords = async () => {\n//   try {\n//     const words = await axios.get(\"http://localhost:9090/random-words\");\n//     return words.data.words;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// export const getWordDefinition = async (word) => {\n//   try {\n//     const wordDef = await axios.get(\n//       \"http://localhost:9090/word-definition\",\n\n//       {\n//         word,\n//       }\n//     );\n//     return wordDef.data.definition;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const getRandomWords = async () => {\n  try {\n    const words = await axios.get(\n      `https://api.wordnik.com/v4/words.json/randomWords?hasDictionaryDef=true&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&limit=11&api_key=${process.env.REACT_APP_API_KEY}`\n    );\n    return words.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getWordDefinition = async (word) => {\n  try {\n    const wordDef = await axios.get(\n      `https://api.wordnik.com/v4/word.json/${word}/definitions?limit=200&includeRelated=false&useCanonical=false&includeTags=false&api_key=${process.env.REACT_APP_API_KEY}`\n    );\n\n    console.log(wordDef, \"=====================\", process.env.REACT_APP_TEST);\n\n    return wordDef.data[0].text;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}