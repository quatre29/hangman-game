{"ast":null,"code":"var _jsxFileName = \"/home/quatre/Desktop/Projects/hangman/src/components/Message.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/Message.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = ({\n  text,\n  hidden,\n  positive,\n  hint\n}) => {\n  _s();\n\n  const [hideHint, setHideHint] = useState(false);\n  useEffect(() => {\n    if (hint) {\n      setTimeout(() => {\n        setHideHint(true);\n      }, 10000);\n    }\n  }, [hint]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${hidden} ${positive && \"positive\"} ${hint && \"hint\"}\n      ${hideHint && \"hidden\"}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"Av4d9dx5tbolT/XHNjNdWug+lko=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/home/quatre/Desktop/Projects/hangman/src/components/Message.jsx"],"names":["React","useEffect","useState","Message","text","hidden","positive","hint","hideHint","setHideHint","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AAAA;;AACpD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EAAU;AACRG,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFS,EAEP,KAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACF,IAAD,CANM,CAAT;AAQA,sBACE;AACE,IAAA,SAAS,EAAG,WAAUF,MAAO,IAAGC,QAAQ,IAAI,UAAW,IAAGC,IAAI,IAAI,MAAO;AAC/E,QAAQC,QAAQ,IAAI,QAAS,EAFzB;AAAA,cAIGJ;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAMD,O;;KAAAA,O;AAqBN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/Message.css\";\n\nconst Message = ({ text, hidden, positive, hint }) => {\n  const [hideHint, setHideHint] = useState(false);\n\n  useEffect(() => {\n    if (hint) {\n      setTimeout(() => {\n        setHideHint(true);\n      }, 10000);\n    }\n  }, [hint]);\n\n  return (\n    <div\n      className={`message ${hidden} ${positive && \"positive\"} ${hint && \"hint\"}\n      ${hideHint && \"hidden\"}`}\n    >\n      {text}\n    </div>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}