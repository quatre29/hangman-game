{"ast":null,"code":"var _jsxFileName = \"/home/quatre/Desktop/Projects/hangman/src/components/Word.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Letter from \"./Letter\";\nimport \"../styles/Word.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Word = ({\n  currentWord,\n  setCurrentWord,\n  words,\n  currentLetter,\n  loading\n}) => {\n  _s();\n\n  useEffect(() => {\n    const wordArray = words[0].split(\"\");\n    const wordObject = {\n      word: words[0],\n      letters: {},\n      definition: null\n    };\n    wordArray.forEach(letter => {\n      wordObject.letters[letter] = false;\n    });\n    setCurrentWord(wordObject);\n  }, [words]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word\",\n    children: currentWord && currentWord.word.split(\"\").map((letter, i) => {\n      return /*#__PURE__*/_jsxDEV(Letter, {\n        letter: letter,\n        guessed: currentWord.letters[letter]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Word, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Word;\nexport default Word;\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["/home/quatre/Desktop/Projects/hangman/src/components/Word.jsx"],"names":["React","useEffect","Letter","Word","currentWord","setCurrentWord","words","currentLetter","loading","wordArray","split","wordObject","word","letters","definition","forEach","letter","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,WADY;AAEZC,EAAAA,cAFY;AAGZC,EAAAA,KAHY;AAIZC,EAAAA,aAJY;AAKZC,EAAAA;AALY,CAAD,KAMP;AAAA;;AACJP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,SAAS,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASI,KAAT,CAAe,EAAf,CAAlB;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAEN,KAAK,CAAC,CAAD,CADM;AAEjBO,MAAAA,OAAO,EAAE,EAFQ;AAGjBC,MAAAA,UAAU,EAAE;AAHK,KAAnB;AAMAL,IAAAA,SAAS,CAACM,OAAV,CAAmBC,MAAD,IAAY;AAC5BL,MAAAA,UAAU,CAACE,OAAX,CAAmBG,MAAnB,IAA6B,KAA7B;AACD,KAFD;AAIAX,IAAAA,cAAc,CAACM,UAAD,CAAd;AACD,GAdQ,EAcN,CAACL,KAAD,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGF,WAAW,IACVA,WAAW,CAACQ,IAAZ,CAAiBF,KAAjB,CAAuB,EAAvB,EAA2BO,GAA3B,CAA+B,CAACD,MAAD,EAASE,CAAT,KAAe;AAC5C,0BACE,QAAC,MAAD;AAEE,QAAA,MAAM,EAAEF,MAFV;AAGE,QAAA,OAAO,EAAEZ,WAAW,CAACS,OAAZ,CAAoBG,MAApB;AAHX,SACOE,CADP;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMf,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Letter from \"./Letter\";\nimport \"../styles/Word.css\";\n\nconst Word = ({\n  currentWord,\n  setCurrentWord,\n  words,\n  currentLetter,\n  loading,\n}) => {\n  useEffect(() => {\n    const wordArray = words[0].split(\"\");\n\n    const wordObject = {\n      word: words[0],\n      letters: {},\n      definition: null,\n    };\n\n    wordArray.forEach((letter) => {\n      wordObject.letters[letter] = false;\n    });\n\n    setCurrentWord(wordObject);\n  }, [words]);\n\n  return (\n    <div className=\"word\">\n      {currentWord &&\n        currentWord.word.split(\"\").map((letter, i) => {\n          return (\n            <Letter\n              key={i}\n              letter={letter}\n              guessed={currentWord.letters[letter]}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Word;\n"]},"metadata":{},"sourceType":"module"}