{"ast":null,"code":"var _jsxFileName = \"/home/quatre/Desktop/Projects/hangman/src/components/Perks.jsx\";\nimport React, { useState } from \"react\";\nimport \"../styles/Perks.css\";\nimport { getWordDefinition } from \"../utils/reqOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Perks = ({\n  perks,\n  setPerks,\n  setCurrentWord,\n  currentWord,\n  setTotalScore,\n  setHangmanCount,\n  currentlyGuessing\n}) => {\n  const hintPerk = async () => {\n    if (currentlyGuessing) {\n      if (!perks.hintPerk) {\n        const def = await getWordDefinition(currentWord.word);\n        setCurrentWord(prevCurrentWord => {\n          return { ...prevCurrentWord,\n            definition: def\n          };\n        });\n        setHangmanCount(prevCount => prevCount - 3);\n        setPerks(prevPerks => {\n          return { ...prevPerks,\n            hintPerk: true\n          };\n        });\n      }\n    }\n  };\n\n  const firstAndLastLetterPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.firstAndLastLetter) {\n        setCurrentWord(prevCurrentWord => {\n          const newWordState = { ...prevCurrentWord\n          };\n          const letters = Object.keys(newWordState.letters);\n          const wordArr = newWordState.word.split(\"\");\n          newWordState.letters[letters[0]] = true;\n          newWordState.letters[wordArr[wordArr.length - 1]] = true;\n          return newWordState;\n        });\n        setHangmanCount(prevCount => prevCount - 5);\n        setPerks(prevPerks => {\n          return { ...prevPerks,\n            firstAndLastLetter: true\n          };\n        });\n      }\n    }\n  };\n\n  const skipWordPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.skipWord) {\n        console.log(\"skipWord perk\");\n        setCurrentWord(prevCurrentWord => {\n          const newWordState = { ...prevCurrentWord\n          };\n          Object.keys(newWordState.letters).forEach(letter => newWordState.letters[letter] = true);\n          return newWordState;\n        });\n        setTotalScore(prevScore => {\n          return prevScore - 10;\n        });\n        setPerks(prevPerks => {\n          return { ...prevPerks,\n            skipWord: true\n          };\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"perks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${!perks.hintPerk && \"tooltip\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: hintPerk,\n        className: `fas fa-lightbulb ${perks.hintPerk && \"used\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${!perks.hintPerk ? \"tooltiptext\" : \"tooltipdisabled\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use this perk to get a hint about the word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This perk will cost you 3 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"You have 10 seconds to read the hint after will disappear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${!perks.skipWord && \"tooltip\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: skipWordPerk,\n        className: `fas fa-forward ${perks.skipWord && \"used\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${!perks.skipWord ? \"tooltiptext\" : \"tooltipdisabled\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use this perk to reveal the entire word \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This perk can be used only once per game!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This perk will cost you 10 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${!perks.firstAndLastLetter && \"tooltip\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: firstAndLastLetterPerk,\n        className: `fas fa-text-width ${perks.firstAndLastLetter && \"used\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${!perks.firstAndLastLetter ? \"tooltiptext\" : \"tooltipdisabled\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Reveal first and last letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"To use this perk, it will cost you 5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Perks;\nexport default Perks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Perks\");","map":{"version":3,"sources":["/home/quatre/Desktop/Projects/hangman/src/components/Perks.jsx"],"names":["React","useState","getWordDefinition","Perks","perks","setPerks","setCurrentWord","currentWord","setTotalScore","setHangmanCount","currentlyGuessing","hintPerk","def","word","prevCurrentWord","definition","prevCount","prevPerks","firstAndLastLetterPerk","firstAndLastLetter","newWordState","letters","Object","keys","wordArr","split","length","skipWordPerk","skipWord","console","log","forEach","letter","prevScore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Perks.css\";\nimport { getWordDefinition } from \"../utils/reqOptions\";\n\nconst Perks = ({\n  perks,\n  setPerks,\n  setCurrentWord,\n  currentWord,\n  setTotalScore,\n  setHangmanCount,\n  currentlyGuessing,\n}) => {\n  const hintPerk = async () => {\n    if (currentlyGuessing) {\n      if (!perks.hintPerk) {\n        const def = await getWordDefinition(currentWord.word);\n        setCurrentWord((prevCurrentWord) => {\n          return { ...prevCurrentWord, definition: def };\n        });\n        setHangmanCount((prevCount) => prevCount - 3);\n        setPerks((prevPerks) => {\n          return { ...prevPerks, hintPerk: true };\n        });\n      }\n    }\n  };\n  const firstAndLastLetterPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.firstAndLastLetter) {\n        setCurrentWord((prevCurrentWord) => {\n          const newWordState = { ...prevCurrentWord };\n\n          const letters = Object.keys(newWordState.letters);\n\n          const wordArr = newWordState.word.split(\"\");\n\n          newWordState.letters[letters[0]] = true;\n          newWordState.letters[wordArr[wordArr.length - 1]] = true;\n\n          return newWordState;\n        });\n        setHangmanCount((prevCount) => prevCount - 5);\n\n        setPerks((prevPerks) => {\n          return { ...prevPerks, firstAndLastLetter: true };\n        });\n      }\n    }\n  };\n  const skipWordPerk = () => {\n    if (currentlyGuessing) {\n      if (!perks.skipWord) {\n        console.log(\"skipWord perk\");\n        setCurrentWord((prevCurrentWord) => {\n          const newWordState = { ...prevCurrentWord };\n\n          Object.keys(newWordState.letters).forEach(\n            (letter) => (newWordState.letters[letter] = true)\n          );\n\n          return newWordState;\n        });\n        setTotalScore((prevScore) => {\n          return prevScore - 10;\n        });\n\n        setPerks((prevPerks) => {\n          return { ...prevPerks, skipWord: true };\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"perks-container\">\n      <div className={`${!perks.hintPerk && \"tooltip\"}`}>\n        <i\n          onClick={hintPerk}\n          className={`fas fa-lightbulb ${perks.hintPerk && \"used\"}`}\n        >\n          <span\n            className={`${!perks.hintPerk ? \"tooltiptext\" : \"tooltipdisabled\"}`}\n          >\n            <p>Use this perk to get a hint about the word.</p>\n            <p>\n              <strong>This perk will cost you 3 points</strong>\n            </p>\n            <p>\n              <i>You have 10 seconds to read the hint after will disappear</i>\n            </p>\n          </span>\n        </i>\n      </div>\n      <div className={`${!perks.skipWord && \"tooltip\"}`}>\n        <i\n          onClick={skipWordPerk}\n          className={`fas fa-forward ${perks.skipWord && \"used\"}`}\n        >\n          <span\n            className={`${!perks.skipWord ? \"tooltiptext\" : \"tooltipdisabled\"}`}\n          >\n            <p>Use this perk to reveal the entire word </p>\n            <p>\n              <strong>This perk can be used only once per game!</strong>\n            </p>\n            <p>\n              <strong>This perk will cost you 10 points</strong>\n            </p>\n          </span>\n        </i>\n      </div>\n\n      <div className={`${!perks.firstAndLastLetter && \"tooltip\"}`}>\n        <i\n          onClick={firstAndLastLetterPerk}\n          className={`fas fa-text-width ${perks.firstAndLastLetter && \"used\"}`}\n        >\n          <span\n            className={`${\n              !perks.firstAndLastLetter ? \"tooltiptext\" : \"tooltipdisabled\"\n            }`}\n          >\n            <p>Reveal first and last letter</p>\n            <p>\n              <strong>To use this perk, it will cost you 5 points</strong>\n            </p>\n          </span>\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default Perks;\n"]},"metadata":{},"sourceType":"module"}