{"ast":null,"code":"var _jsxFileName = \"/home/quatre/Desktop/Projects/hangman/src/components/UserInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Button from \"./Button\";\nimport Message from \"./Message\";\nimport \"../styles/UserInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInput = ({\n  currentLetter,\n  setCurrentLetter,\n  currentlyGuessing,\n  guessedLetters\n}) => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [errorInput, setErrorInput] = useState(\"\");\n  const inputRef = useRef();\n\n  const handleInput = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const regex = /[a-z]/gi;\n    event.preventDefault();\n\n    if (guessedLetters.includes(inputValue)) {\n      setErrorInput(\"Letter already guessed! Try another one\");\n      setInputValue(\"\");\n      inputRef.current.focus();\n      return;\n    }\n\n    if (inputValue.length > 0 && inputValue.match(regex)) {\n      setCurrentLetter(inputValue);\n      setErrorInput(\"\");\n      setInputValue(\"\");\n    } else {\n      setErrorInput(\"Please provide only letters\");\n    }\n\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Message, {\n      text: errorInput,\n      hidden: errorInput.length <= 0 && \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"guessInput\",\n        value: inputValue,\n        type: \"text\",\n        onChange: handleInput,\n        maxLength: \"1\",\n        ref: inputRef,\n        disabled: !currentlyGuessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        text: \"Guess\",\n        disabled: !currentlyGuessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserInput, \"2s9uBYpr+7wu4dOzWj//GsNraLU=\");\n\n_c = UserInput;\nexport default UserInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"sources":["/home/quatre/Desktop/Projects/hangman/src/components/UserInput.jsx"],"names":["React","useState","useRef","Button","Message","UserInput","currentLetter","setCurrentLetter","currentlyGuessing","guessedLetters","inputValue","setInputValue","errorInput","setErrorInput","inputRef","handleInput","event","target","value","handleSubmit","regex","preventDefault","includes","current","focus","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,yBAAP;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,aADiB;AAEjBC,EAAAA,gBAFiB;AAGjBC,EAAAA,iBAHiB;AAIjBC,EAAAA;AAJiB,CAAD,KAKZ;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMa,QAAQ,GAAGZ,MAAM,EAAvB;;AAEA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7BL,IAAAA,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC9B,UAAMI,KAAK,GAAG,SAAd;AAEAJ,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIZ,cAAc,CAACa,QAAf,CAAwBZ,UAAxB,CAAJ,EAAyC;AACvCG,MAAAA,aAAa,CAAC,yCAAD,CAAb;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAG,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB;AACA;AACD;;AACD,QAAId,UAAU,CAACe,MAAX,GAAoB,CAApB,IAAyBf,UAAU,CAACgB,KAAX,CAAiBN,KAAjB,CAA7B,EAAsD;AACpDb,MAAAA,gBAAgB,CAACG,UAAD,CAAhB;AACAG,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAJD,MAIO;AACLE,MAAAA,aAAa,CAAC,6BAAD,CAAb;AACD;;AACDC,IAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB;AACD,GAlBD;;AAoBA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEZ,UAAf;AAA2B,MAAA,MAAM,EAAEA,UAAU,CAACa,MAAX,IAAqB,CAArB,IAA0B;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,KAAK,EAAET,UAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEK,WAJZ;AAKE,QAAA,SAAS,EAAC,GALZ;AAME,QAAA,GAAG,EAAED,QANP;AAOE,QAAA,QAAQ,EAAE,CAACN;AAPb;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAmC,QAAA,QAAQ,EAAE,CAACA;AAA9C;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD,CAnDD;;GAAMH,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Button from \"./Button\";\nimport Message from \"./Message\";\nimport \"../styles/UserInput.css\";\n\nconst UserInput = ({\n  currentLetter,\n  setCurrentLetter,\n  currentlyGuessing,\n  guessedLetters,\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [errorInput, setErrorInput] = useState(\"\");\n  const inputRef = useRef();\n\n  const handleInput = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    const regex = /[a-z]/gi;\n\n    event.preventDefault();\n    if (guessedLetters.includes(inputValue)) {\n      setErrorInput(\"Letter already guessed! Try another one\");\n      setInputValue(\"\");\n      inputRef.current.focus();\n      return;\n    }\n    if (inputValue.length > 0 && inputValue.match(regex)) {\n      setCurrentLetter(inputValue);\n      setErrorInput(\"\");\n      setInputValue(\"\");\n    } else {\n      setErrorInput(\"Please provide only letters\");\n    }\n    inputRef.current.focus();\n  };\n\n  return (\n    <>\n      <Message text={errorInput} hidden={errorInput.length <= 0 && \"hidden\"} />\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"guessInput\"\n          value={inputValue}\n          type=\"text\"\n          onChange={handleInput}\n          maxLength=\"1\"\n          ref={inputRef}\n          disabled={!currentlyGuessing}\n        />\n        <Button type=\"submit\" text=\"Guess\" disabled={!currentlyGuessing} />\n      </form>\n    </>\n  );\n};\n\nexport default UserInput;\n"]},"metadata":{},"sourceType":"module"}